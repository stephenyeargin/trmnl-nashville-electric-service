{% assign mapCanvasId = "nes-map-canvas-" | append_random %}
{% assign formatted_update_time = UpdateDateTimeFormatted | date: '%-m/%-d/%Y %-I:%M %p' %}
{% assign customer_count = MapList | map: 'CustAffected' | sum %}

{%- capture nes_logo %}
<svg width="100%" height="100%" viewBox="0 0 152 152" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;">
    <g id="g2461" transform="matrix(0.75,0,0,0.75,-32.925,-2.23749)">
        <g id="Layer-1" serif:id="Layer 1">
            <g id="g24611" serif:id="g2461">
                <g id="g2429">
                    <path id="polygon2423" d="M43.9,185.2L43.9,132.3L58.8,132.3L94.7,170.2L95,170.2L95,132.3L107.9,132.3L107.9,185.2L92.8,185.2L56.9,147.4L56.7,147.4L56.7,185.2L43.9,185.2Z" style="fill:rgb(0,0,0);fill-rule:nonzero;"/>
                    <path id="polygon2425" d="M130.4,142.5L130.4,153.3L161.3,153.3L161.3,163.4L130.4,163.4L130.4,175.1L176.9,175.1L176.9,185.2L117.5,185.2L117.5,132.3L174.9,132.3L174.9,142.5L130.4,142.5Z" style="fill:rgb(0,0,0);fill-rule:nonzero;"/>
                    <path id="path2427" d="M236.8,147.2C233.1,145.2 229.3,143.7 225.5,142.7C221.7,141.8 217.7,141.3 213.6,141.3C208,141.3 203.9,141.8 201.1,142.8C198.3,143.8 196.9,145.2 196.9,146.9C196.9,148.7 198.4,150 201.5,150.7C202.8,151 204.1,151.2 205.6,151.4C207.1,151.5 208.6,151.7 210.3,151.7C212,151.8 213.8,151.8 215.6,151.9C217.5,152 219.4,152.1 221.5,152.3C225.6,152.7 229.2,153.3 232.3,154C235.4,154.7 237.9,155.7 240,157C242,158.2 243.6,159.8 244.6,161.6C245.6,163.5 246.1,165.7 246.1,168.2C246.1,173.9 243.5,178.4 238.2,181.6C233,184.8 225.3,186.4 215.1,186.4C208.5,186.4 202.4,185.6 196.8,184.1C191.2,182.5 185.9,180 180.8,176.5L187.8,167.9C192.4,170.7 196.9,172.7 201.5,174.1C206,175.4 210.8,176.1 215.7,176.1C221.1,176.1 225.2,175.4 228,174.1C230.9,172.7 232.3,171 232.3,168.8C232.3,167.6 231.9,166.7 231.1,166.1C230.3,165.5 229.1,165 227.5,164.6C225.9,164.3 224,164 221.8,163.9C219.6,163.8 217,163.7 214.2,163.5C209,163.3 204.5,162.9 200.7,162.2C196.9,161.5 193.7,160.6 191.1,159.3C188.5,158.1 186.6,156.5 185.4,154.6C184.1,152.7 183.5,150.5 183.5,147.8C183.5,142.6 186,138.5 191,135.4C196,132.4 203.3,130.8 213,130.8C225.9,130.8 236.3,133.4 244.1,138.5L236.8,147.2Z" style="fill:rgb(0,0,0);fill-rule:nonzero;"/>
                </g>
                <g id="g2441">
                    <path id="polygon2431" d="M111.4,93L84.8,97L84.8,99.8L111.2,96L177.3,96L203.8,99.9L203.8,97.6L177.1,93L111.4,93Z" style="fill:rgb(0,0,0);fill-rule:nonzero;"/>
                    <path id="path2433" d="M81.4,117.5L207.3,117.5L207.3,109.4L203.8,109.4L203.8,102.3L177.3,98.5L111.4,98.5L84.8,102.1L84.8,109.4L81.4,109.4L81.4,117.5ZM92,109.8L196.5,109.8L196.5,114.6L92,114.6L92,109.8Z" style="fill:rgb(0,0,0);fill-rule:nonzero;"/>
                    <rect id="rect2435" x="146" y="46.5" width="3" height="4.9" style="fill:rgb(0,0,0);"/>
                    <rect id="rect2437" x="146" y="53.8" width="3" height="4.7" style="fill:rgb(0,0,0);"/>
                    <path id="path2439" d="M193.2,88.6C184,82.4 178,71.6 168,67C166.7,66.5 165.4,65.9 164.2,65.5C163,65.1 160.8,64.4 159.1,64C157,63.4 153.9,63 152.8,61.8C152.3,61.2 152.4,60.4 151.3,60.1L151.3,45.2L154.4,45.2L154.4,42L152.2,42C150.3,42 150.1,41.7 149.7,41.5C149,41.2 147.8,40.3 147.1,38.8C146.4,37.3 145.7,33.1 145.5,30C145.3,27.2 145.1,21.7 145.1,21.7L144.2,21.7C144.2,21.7 144.1,23.7 144.1,25.9C144,28.1 144.7,39.4 138.4,41.8C138.2,41.9 138,41.9 137.7,42L135,42L135,45.2L137.8,45.2L137.8,60.1C136.7,60.4 136.6,62.5 134.5,63.1C129.9,63.7 125.4,65.2 121.6,66.8C107.4,72.3 100.5,87.2 89.4,91.9C89.4,91.9 87.9,92.6 84.7,93.7L84.7,94.8C84.7,94.8 104.3,92 111,91.1L177.1,91L203.7,95.8L203.8,94.2C197.5,92.2 197.6,91.6 193.2,88.6ZM144,40.1C144.3,36.3 144.9,29.3 144.9,29.3C144.9,29.3 145.4,38 146.8,40C147.3,40.7 147.5,41.2 148.8,41.7L143.9,41.6L144,40.1ZM143.8,43L153.2,43L153.2,44.1L143.8,44.1L143.8,43ZM151.2,61.4L151.2,62.5L143.8,62.5L143.8,61.4L151.2,61.4ZM144.8,60L144.8,45.5L150.2,45.5L150.2,60L144.8,60ZM177,88.3L112.6,88.3L121.2,79.4C129.6,68.2 141.6,63.9 141.6,63.9C141.6,63.9 149.6,63.3 152.9,64C152.9,64 165.1,66.2 169.6,69.7C169.6,69.7 173.9,71.7 186.3,85C186.3,85 192.5,91 197.6,93.1L177,88.3Z" style="fill:rgb(0,0,0));fill-rule:nonzero;"/>
                </g>
            </g>
        </g>
    </g>
</svg>
{% endcapture %}

<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
  crossorigin="" />
<script
  src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin=""></script>

<style>
  #{{ mapCanvasId }} {
    border-radius: 10px;
  }
</style>

<script>
  const MAP_LIST = {{ MapList | json }};
  const THUNDERFOREST_API_KEY = {{ trmnl.plugin_settings.custom_fields_values.thunderforest_api_key | json }};
</script>

<script>
  /**
   * Main Loop
   */
  document.addEventListener('DOMContentLoaded', async function () {
    const mapContainer = document.getElementById('{{ mapCanvasId }}');
    if (mapContainer) {
      // Remove any previous map instance
      if (window.nesMap && window.nesMap.remove) {
        window.nesMap.remove();
      }
      mapContainer.innerHTML = '';
      window.nesMap = L.map('{{ mapCanvasId }}', {
        center: [36.1627, -86.7816], // Nashville
        zoom: 1,
        zoomControl: false,
        attributionControl: false
      });
      // Nicer map if API key provided
      if (THUNDERFOREST_API_KEY && !THUNDERFOREST_API_KEY?.includes('THUNDERFOREST_API_KEY')) {
        L.tileLayer('https://{s}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}{r}.png?apikey={apikey}', {
            attribution: '&copy; <a href="http://www.thunderforest.com/">Thunderforest</a>, &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
            apikey: THUNDERFOREST_API_KEY,
          }).addTo(window.nesMap);
      } else {
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
	          attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
            ext: 'png',
          }).addTo(window.nesMap);
      }

      // Create a layer group for markers
      const markerLayer = L.layerGroup();
      const bounds = [];

      MAP_LIST.map((item, index) => {
        // X1 is longitude, Y1 is latitude in geographic data
        let latitude = parseFloat(item.Y1);
        let longitude = parseFloat(item.X1);
        let affected = parseInt(item.CustAffected, 10);

        // Validate and process latitude/longitude before using
        if (!isNaN(latitude) && !isNaN(longitude)) {
          if (latitude >= -90 && latitude <= 90 && longitude >= -180 && longitude <= 180) {
            bounds.push([latitude, longitude]);

            // Define severity levels based on the number of customers affected
            const severity = affected > 500 ? 'critical' : affected > 100 ? 'high' : affected > 50 ? 'medium' : 'low';

            // Scale marker size based on severity
            const radius = severity === 'critical' ? 16 : severity === 'high' ? 13 : severity === 'medium' ? 10 : 8;

            // Inline SVG for marker with dynamic sizing
            const svgIcon = L.divIcon({
              html: `<svg width="${radius * 2}" height="${radius * 2}" viewBox="0 0 1000 1000" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;">
                <g transform="matrix(0.488281,0,0,0.651042,0,0)">
                  <rect x="0" y="0" width="2048" height="1536" style="fill:none;"/>
                  <g transform="matrix(2.04309,0,0,1.53232,-77.8345,-26.168)">
                    <circle cx="539.299" cy="518.28" r="481.72" style="stroke:white;stroke-width:26.06px;"/>
                  </g>
                  <g transform="matrix(8.04095,0,0,6.03071,-2607.85,-2053.5)">
                    <path d="M453.07,378.463L500,378.463L456.002,450.716L494.047,450.716L403.34,557.248L444.865,472.74L407.224,472.74L453.07,378.463Z" style="fill:rgb(235,235,235);"/>
                  </g>
                </g>
              </svg>`,
              className: '',
              iconSize: [radius * 2, radius * 2],
              iconAnchor: [radius, radius],
            });

            // Create marker with tooltip
            const marker = L.marker([latitude, longitude], { icon: svgIcon });

            // Add tooltip showing number of customers affected
            marker.bindTooltip(`${affected.toLocaleString()} customer${affected === 1 ? '' : 's'} affected`, {
              permanent: false,
              direction: 'top',
              offset: [0, -10]
            });

            marker.addTo(window.nesMap);
          } else {
            console.warn(`Marker ${index} has out-of-range coordinates:`, latitude, longitude);
          }
        } else {
          console.warn(`Marker ${index} has invalid coordinates:`, item.Y1, item.X1);
        }
      });

      // Set map bounds to include all markers or center on Nashville if no outages
      if (bounds.length > 0) {
        window.nesMap.fitBounds(bounds);
      } else {
        // Center on Nashville with city-level zoom when no outages
        window.nesMap.setView([36.1627, -86.7816], 10);

        // Add "No outages reported" overlay
        const overlayDiv = document.createElement('div');
        overlayDiv.innerHTML = '<div class="bg--white title title--small p--5 clamp--none text--center" style="border-radius: 10px; border: solid 1px #000">No outages reported</div>';
        overlayDiv.style.cssText = 'position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1000; pointer-events: none;';
        mapContainer.appendChild(overlayDiv);
      }
    }
  });
</script>
